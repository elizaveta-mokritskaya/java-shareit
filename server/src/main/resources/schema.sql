drop table if exists users cascade;
create table if not exists users
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name varchar(50) not null,
    email varchar(25) not null,
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
    );

drop table if exists requests cascade;
create table if not exists requests
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description varchar(200) not null,
    requestor_id BIGINT not null,
    created_time TIMESTAMP WITHOUT TIME ZONE,
    foreign key (requestor_id) references users (id) on delete cascade
    );

drop table if exists items cascade;
create table if not exists items
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name varchar(50) not null,
    description varchar(200) not null,
    is_available varchar(11) not null,
    owner_id BIGINT not null,
    request_id BIGINT,
    foreign key (owner_id) references users (id) on delete cascade,
    foreign key (request_id) references requests (id) on delete cascade
    );

drop table if exists bookings cascade;
create table if not exists bookings
(
    id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date TIMESTAMP WITHOUT TIME ZONE,
    item_id BIGINT not null,
    booker_id BIGINT not null,
    status varchar(8) not null,
    foreign key (item_id) references items (id) on delete cascade,
    foreign key (booker_id) references users (id) on delete cascade
    );

drop table if exists comments cascade;
create table if not exists comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(500) NOT NULL,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT PK_COMMENTS PRIMARY KEY (id),
    CONSTRAINT FK_COMMENT_FOR_ITEM FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT FK_COMMENT_FOR_USER FOREIGN KEY (author_id) REFERENCES users (id)
    );